# Test suite to deploy a minimal RHCS Ceph Storage Cluster which can then be used to
# build out the environment.
tests:
  - test:
      name: setup install pre-requisistes
      desc: Setup phase to deploy the required pre-requisites for running the tests.
      module: install_prereq.py
      abort-on-fail: true
  - test:
      name: cluster deployment
      desc: Execute the cluster deployment workflow.
      module: test_cephadm.py
      polarion-id:
      config:
        verify_cluster_health: true
        steps:
          - config:
              command: bootstrap
              service: cephadm
              base_cmd_args:
                verbose: true
              args:
                registry-url: registry.redhat.io
                mon-ip: node1
                orphan-initial-daemons: true
          - config:
              command: add_hosts
              service: host
              args:
                attach_ip_address: true
                labels: apply-all-labels
          - config:
              command: apply
              service: mgr
              args:
                placement:
                  label: mgr
          - config:
              command: apply
              service: mon
              args:
                placement:
                  label: mon
          - config:
              command: apply
              service: osd
              args:
                all-available-devices: true
          - config:
              command: shell
              args:          # arguments to ceph orch
                - ceph
                - fs
                - volume
                - create
                - cephfs
          - config:
              command: apply
              service: rgw
              pos_args:
                - rgw.1
              args:
                placement:
                  label: rgw
          - config:
              command: apply
              service: mds
              base_cmd_args:          # arguments to ceph orch
                verbose: true
              pos_args:
                - cephfs              # name of the filesystem
              args:
                placement:
                  nodes:
                    - node2
                    - node6
                  limit: 2            # no of daemons
                  sep: " "            # separator to be used for placements
      destroy-cluster: false
      abort-on-fail: true

  - test:
      name: Configure client admin
      desc: Configures client admin node on cluster
      module: test_client.py
      polarion-id:
      config:
        command: add
        id: client.1                      # client Id (<type>.<Id>)
        node: node8                       # client node
        install_packages:
          - ceph-common
          - ceph-base
        copy_admin_keyring: true          # Copy admin keyring to node
        caps:                             # authorize client capabilities
          mon: "allow *"
          osd: "allow *"
          mds: "allow *"
          mgr: "allow *"

  - test:
      name: Run IOs
      module: radosbench.py
      config:
        RGW:
          create_rgw_user: true
          access_key: null
          secret_key: null
          create_bkt_obj: true
          avoid_user_created_bkts: "all"
          num_buckets: 5
          num_objects: 10000
          download_objects: false
          delete_buckets_and_objects: false
        Rados_Bench:
#          crush_rule: stretch_rule
          no_pools: 3
          write_seconds: 200
          Size: 4096
          sequential_read: true
          random_read: true
          read_seconds: 10
          delete_bench_data: false
        RBD:
#          crush_rule: stretch_rule
          num_loops: 12
          num_parallel_jobs: 4
          block_size: "16k"
          write_size: "512m"
          run_time: 500
          delete_file_data: false
        CephFS:
#          crush_rule: stretch_rule
          num_threads: 4
          num_files: 10000
          file_size: 512
      desc: Create & delete a EC pool with data